## https://docs.ansible.com/ansible/latest/modules/parted_module.html

# ---

- name: print disk info
  command: "fdisk -l {{ device.dev }}"
  with_items: "{{ fs_layout.devices }}"
  loop_control:
    loop_var: device

# ---

- name: install fs packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ fs_packages }}"

# ---

- name: copy /etc/mdadm.conf
  template:
    src: etc/mdadm.conf
    dest: /etc/mdadm.conf
    owner: root
    group: root
    mode: 0644

# ---

#- name: limit raid rebuild speed
#  block:
#    - command: "sysctl -w dev.raid.speed_limit_min=10000"
#    - command: "sysctl -w dev.raid.speed_limit_max=10000"

# ---

#- name: remove arrays
#  include: "./remove-arrays.yml fs_array={{array.dev}}"
#  with_items: "{{ fs_layout.arrays }}"
#  loop_control:
#    loop_var: array
#
#- name: remove parititons
#  include: "./remove-partitions.yml fs_device={{device.dev}}"
#  with_items: "{{ fs_layout.devices }}"
#  loop_control:
#    loop_var: device

# ---

- block:
  - name: 'unmount md devices'
    mount:
      path: "{{ item.dev }}"
      opts: '-l'
      state: unmounted
    with_items:
      - "{{ fs_layout.arrays }}"

- name: remove arrays
  command: "mdadm --remove {{ array.dev }}"
  with_items: "{{ fs_layout.arrays }}"
  loop_control:
    loop_var: array
  args:
    removes: "{{ array.dev }}"

- name: 'stop md devices using --scan'
  command: 'mdadm --stop --scan'

- name: remove parititons
  include: "./remove-partitions.yml fs_device={{device.dev}}"
  with_items: "{{ fs_layout.devices }}"
  loop_control:
    loop_var: device

- name: 'partprobe update parititons'
  command: "partprobe {{device.dev}}"
  with_items: "{{ fs_layout.devices }}"
  loop_control:
    loop_var: device
  ignore_errors: true

# ---

- block:
  - name: 'create a new partition with a size of 256MiB - /boot/efi'
    parted:
      device: "{{ item.dev }}"
      number: "{{ idx + 1 }}"
      state: present
      part_start: 1MiB
      part_end: 256MiB
    loop: "{{ fs_layout.devices }}"
    loop_control:
      index_var: idx

- block:
  - name: 'create /boot/efi filesystem'
    filesystem:
      fstype: ext4
      force: yes
      dev:  "{{ item.dev }}1"
    loop: "{{ fs_layout.devices }}"
    loop_control:
      index_var: idx

# ---

- block:
  - name: 'create a new partition with a size of 512MiB - /boot'
    parted:
      device: "{{ item.dev }}"
      number: "{{ idx + 2 }}"
      state: present
      part_start: 256MiB
      part_end: 768MiB
    loop: "{{ fs_layout.devices }}"
    loop_control:
      index_var: idx

- block:
  - name: 'create /boot filesystem'
    filesystem:
      fstype: vfat
      force: yes
      dev:  "{{ item.dev }}2"
    loop: "{{ fs_layout.devices }}"
    loop_control:
      index_var: idx

# ---

#- block:
#  - name:  'create a new partition using remaining space - /'
#    parted:
#      device: "{{ item.dev }}"
#      number: "{{ idx + 3 }}"
#      state: present
#      part_start: 768MiB
#      part_end: 100%
#    loop: "{{ fs_layout.devices }}"
#    loop_control:
#      index_var: idx

## ---
#
##- name: set gpt flag
##  parted:
##    device: "{{ item.dev }}"
##    number: 1
##    state: present
##  with_items:
##    - "{{ fs_layout.devices }}"
#
## ---

- name: create /boot/efi md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md1'
        devices:
          - '/dev/sda1'
          - '/dev/sdb1'
          - '/dev/sdc1'
          - '/dev/sdd1'
        filesystem: 'ext4'
        level: '1'
        mountpoint: '/mnt/md1'
        state: 'present'
  ignore_errors: true

- name: create /boot md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md2'
        devices:
          - '/dev/sda2'
          - '/dev/sdb2'
          - '/dev/sdc2'
          - '/dev/sdd2'
        filesystem: 'vfat'
        level: '1'
        # mountpoint: '/mnt/md2'
        state: 'present'

#- name: create / md array
#  include_role:
#    name: ansible-mdadm
#  vars:
#    mdadm_arrays:
#      - name: 'md3'
#        devices:
#          - '/dev/sda3'
#          - '/dev/sdb3'
#          - '/dev/sdc3'
#          - '/dev/sdd3'
#        filesystem: 'ext4'
#        filesystem_opts: ''
#        level: '10'
#        # mountpoint: '/mnt/md3'
#        state: 'present'

# -------------------- # OLD

##- name:
##    - mdadm_arrays:
##      - name: 'md0'
##        # Define disk devices to assign to array
##        devices: "{{ fs_devices }}"
##        filesystem: 'ext4'
##        state: 'present'
##- name: mdadm
##  include_role:
##    name: ansible-mdadm
##  vars:
##    - mdadm_arrays:
##      - name: 'md0'
##        # Define disk devices to assign to array
##        devices: "{{ fs_devices }}"
##        filesystem: 'ext4'
##        state: 'present'
#
##- name: mdadm
##  mdadm_arrays:
##    # Define array name
##    - name: 'md0'
##      # Define disk devices to assign to array
##      devices:
##        - '/dev/sdb'
##        - '/dev/sdc'
##      # Define filesystem to partition array with
##      filesystem: 'ext4'
##      filesystem_opts: ''
##      # Define the array raid level
##      # 0|1|4|5|6|10
##      level: '1'
##      # Define mountpoint for array device
##      mountpoint: '/mnt/md0'
##      # Define if array should be present or absent
##      state: 'present'
##      # Set mount options (optional)
##      opts: 'noatime'
##    # - name: 'md0'
##    #   devices:
##    #     - '/dev/sdb'
##    #     - '/dev/sdc'
##    #     - '/dev/sdd'
##    #   filesystem: 'ext4'
##    #   level: '5'
##    #   mountpoint: '/mnt/md0'
##    #   state: 'present'
##    -
## Read device information (always use unit when probing)
##- parted: device=/dev/sdb unit=MiB
##  register: sdb_info
#
##- name: print disk info
##  block:
##    - command: "fdisk -l {{ item }}"
##      with_items:
##        - "{{ fs_devices }}"
##
##- name: create partition
##  parted:
##    device: /dev/sda
##    number: 1
##    state: present
##    part_end: 1GiB
#
### Read device information (always use unit when probing)
##- parted: device=/dev/sda unit=MiB
##  register: sda_info
##
### Remove all partitions from disk
##- parted:
##    device: /dev/sda
##    number: "{{ item.num }}"
##    state: absent
##  with_items:
##    - "{{ sda_info.partitions }}"
#
### Create a new primary partition
##- parted:
##    device: /dev/sda
##    number: 1
##    state: present
