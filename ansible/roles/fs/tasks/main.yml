---

# https://docs.ansible.com/ansible/latest/modules/parted_module.html

- name: install mkinitcpio package
  package:
    name: mkinitcpio
    state: present

- name: print disk info
  block:
    - command: "fdisk -l {{ item }}"
      with_items:
        - "{{ fs_devices }}"

# ---

- name: unmount a mounted md volumes
  mount:
    path: "{{ item }}"
    state: unmounted
  with_items:
    - /mnt/md1
    - /mnt/md2
    - /mnt/md3

# ---

#- name: probe partititons
#  command: partprobe

# ---

- name: remove arrays
  include: "./remove-arrays.yml fs_array={{array}}"
  with_items: "{{ fs_arrays }}"
  loop_control:
    loop_var: array

#- name: remove parititons
#  include: "./remove-partitions.yml fs_device={{device}}"
#  with_items: "{{ fs_devices }}"
#  loop_control:
#    loop_var: device

- name: remove /boot md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md1'
        devices:
          - '/dev/sda1'
          - '/dev/sdb1'
          - '/dev/sdc1'
          - '/dev/sdd1'
        filesystem: 'vfat'
        level: '1'
        mountpoint: '/mnt/md1'
        state: 'absent'
    args:
      removes: "/dev/md1"

- name: remove /boot/efi md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md2'
        devices:
          - '/dev/sda2'
          - '/dev/sdb2'
          - '/dev/sdc2'
          - '/dev/sdd2'
        filesystem: 'ext4'
        level: '1'
        mountpoint: '/mnt/md2'
        state: 'absent'
    args:
      removes: "/dev/md2"

- name: remove / md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md3'
        devices:
          - '/dev/sda3'
          - '/dev/sdb3'
          - '/dev/sdc3'
          - '/dev/sdd3'
        filesystem: 'ext4'
        level: '10'
        mountpoint: '/mnt/md3'
        state: 'absent'
    args:
      removes: "/dev/md3"

# ---

#- name: remove parititons
#  include: "./remove-partitions.yml fs_device={{device}}"
#  with_items: "{{ fs_devices }}"
#  loop_control:
#    loop_var: device

#- name: probe partititons
#  command: partprobe

# ----

- name:  create a new partition with a size of 512MiB - /boot
  parted:
    device: "{{ item }}"
    number: "{{ idx + 1 }}"
    state: present
    part_start: 1MiB
    part_end: 512MiB
    align: minimal
  loop: "{{ fs_devices }}"
  loop_control:
    index_var: idx

- name:  create a new partition with a size of 256MiB - /boot/efi
  parted:
    device: "{{ item }}"
    number: "{{ idx + 2 }}"
    state: present
    part_start: 512MiB
    part_end: 768MiB
    align: minimal
  loop: "{{ fs_devices }}"
  loop_control:
    index_var: idx

- name:  create a new partition using remaining space - /
  parted:
    device: "{{ item }}"
    number: "{{ idx + 3 }}"
    state: present
    part_start: 768MiB
    part_end: 100%
    align: minimal
  loop: "{{ fs_devices }}"
  loop_control:
    index_var: idx

# ----

- name: create / md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md3'
        devices:
          - '/dev/sda3'
          - '/dev/sdb3'
          - '/dev/sdc3'
          - '/dev/sdd3'
        filesystem: 'ext4'
        filesystem_opts: ''
        level: '10'
        mountpoint: '/mnt/md3'
        state: 'present'

- name: create /boot/efi md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md2'
        devices:
          - '/dev/sda2'
          - '/dev/sdb2'
          - '/dev/sdc2'
          - '/dev/sdd2'
        filesystem: 'ext4'
        level: '1'
        mountpoint: '/mnt/md2'
        state: 'present'

- name: create /boot md array
  include_role:
    name: ansible-mdadm
  vars:
    mdadm_arrays:
      - name: 'md1'
        devices:
          - '/dev/sda1'
          - '/dev/sdb1'
          - '/dev/sdc1'
          - '/dev/sdd1'
        filesystem: 'vfat'
        level: '1'
        mountpoint: '/mnt/md1'
        state: 'present'

# --------------------

#- name:
#    - mdadm_arrays:
#      - name: 'md0'
#        # Define disk devices to assign to array
#        devices: "{{ fs_devices }}"
#        filesystem: 'ext4'
#        state: 'present'
#- name: mdadm
#  include_role:
#    name: ansible-mdadm
#  vars:
#    - mdadm_arrays:
#      - name: 'md0'
#        # Define disk devices to assign to array
#        devices: "{{ fs_devices }}"
#        filesystem: 'ext4'
#        state: 'present'

#- name: mdadm
#  mdadm_arrays:
#    # Define array name
#    - name: 'md0'
#      # Define disk devices to assign to array
#      devices:
#        - '/dev/sdb'
#        - '/dev/sdc'
#      # Define filesystem to partition array with
#      filesystem: 'ext4'
#      filesystem_opts: ''
#      # Define the array raid level
#      # 0|1|4|5|6|10
#      level: '1'
#      # Define mountpoint for array device
#      mountpoint: '/mnt/md0'
#      # Define if array should be present or absent
#      state: 'present'
#      # Set mount options (optional)
#      opts: 'noatime'
#    # - name: 'md0'
#    #   devices:
#    #     - '/dev/sdb'
#    #     - '/dev/sdc'
#    #     - '/dev/sdd'
#    #   filesystem: 'ext4'
#    #   level: '5'
#    #   mountpoint: '/mnt/md0'
#    #   state: 'present'
#    -
# Read device information (always use unit when probing)
#- parted: device=/dev/sdb unit=MiB
#  register: sdb_info

#- name: print disk info
#  block:
#    - command: "fdisk -l {{ item }}"
#      with_items:
#        - "{{ fs_devices }}"
#
#- name: create partition
#  parted:
#    device: /dev/sda
#    number: 1
#    state: present
#    part_end: 1GiB

## Read device information (always use unit when probing)
#- parted: device=/dev/sda unit=MiB
#  register: sda_info
#
## Remove all partitions from disk
#- parted:
#    device: /dev/sda
#    number: "{{ item.num }}"
#    state: absent
#  with_items:
#    - "{{ sda_info.partitions }}"

## Create a new primary partition
#- parted:
#    device: /dev/sda
#    number: 1
#    state: present
